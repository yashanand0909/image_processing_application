List of commands supported by the program:

Load the image from the file and assign it to the variable:
This is always the first command so that any operation can be performed on the image loaded from the file.
load <file-name> <img-var-name> --- loads the image from the file and assigns it to the variable
E.g: load res/images/open-source-image-original.png open-source

Save the image to the file:
This can be done only after the image is loaded from the file and operation is performed on it.
save <new-file-name> <img-var-name> --- saves the image to the file
E.g: save res/images/open-source-grey-split.png open-source-grey-split

Blur the image:
Use this operation to blur the image also supports split view.
blur <img-var-name> <new-img-var-name> --- blurs the image
blur <img-var-name> <new-img-var-name> split <percentage-int> --- blurs the image and shows the original and blurred image side by side
E.g.: blur open-source open-source-blur split 50

Sharpen the image:
Use this operation to sharpen the image also supports split view.
sharpen <img-var-name> <new-img-var-name> --- sharpens the image
sharpen <img-var-name> <new-img-var-name> split <percentage-int> --- sharpens the image and shows the original and sharpened image side by side
E.g: sharpen open-source open-source-sharpen split 50

Greyscale the image:
Use this operation to convert the image to greyscale also supports split view.
greyscale <img-var-name> <new-img-var-name> --- converts the image to greyscale
greyscale <img-var-name> <new-img-var-name> split <percentage-int> --- converts the image to greyscale and shows the original and greyscale image side by side
E.g.: greyscale open-source open-source-grey split 50

Sepia effect on the image:
Use this operation to convert the image to sepia also supports split view.
sepia <img-var-name> <new-img-var-name> --- converts the image to sepia
sepia <img-var-name> <new-img-var-name> split <percentage-int> --- converts the image to sepia and shows the original and sepia image side by side
E.g.: sepia open-source open-source-sepia split 50

Find the intensity of image:
intensity-component <img-var-name> <new-img-var-name> --- color representation to find average intensity for each pixel among all channels
E.g.: intensity-component open-source open-source-intensity

Find the value component of image:
value-component <img-var-name> <new-img-var-name> --- color representation to find max value for each pixel among all channel
E.g.: value-component open-source open-source-value

luma effect on image:
luma-component <img-var-name> <new-img-var-name> --- color representation to find weighted average of each pixel among all channels
E.g.: luma-component open-source open-source-luma

Red, Green, Blue component of image:
red-component <img-var-name> <new-img-var-name> --- color representation to find red-component of an image
green-component <img-var-name> <new-img-var-name> --- color representation to find green-component of an image
blue-component <img-var-name> <new-img-var-name> --- color representation to find blue-component of an image
E.g.: red-component open-source open-source-red
green-component open-source open-source-green
blue-component open-source open-source-blue

Horizontal and Vertical flip of image:
horizontal-flip <img-var-name> <new-img-var-name> --- flips the image horizontally
vertical-flip <img-var-name> <new-img-var-name> --- flips the image vertically
E.g.: horizontal-flip open-source open-source-horizontal-flip
vertical-flip open-source open-source-vertical-flip

Combine multiple images into one:
rgb-combine <new-img-var-name> <img-var-name1> <img-var-name2> <img-var-name3> --- combines three images into one
E.g.: rgb-combine open-source-combine open-source-red open-source-green open-source-blue

Split the image into three greyscale images:
rgb-split <img-var-name> <new-img-var-name1> <new-img-var-name2> <new-img-var-name3> --- splits the image into three images
E.g.: rgb-split open-source open-source-red-split open-source-green-split open-source-blue-split

Compress the image:
compress <percentage-int> <img-var-name> <new-img-var-name> --- compresses the image
E.g.: compress 50 open-source open-source-compress

Histogram of an image:
histogram <img-var-name> <new-img-var-name> --- creates a histogram of the image
E.g.: histogram open-source open-source-histogram

Levels adjust of an image:
Use this operation to adjust the levels of the image also supports split view black middle and white integer should be in ascending order.
levels-adjust <img-var-name> <new-img-var-name> <black-int> <middle-int> <white-int> --- adjusts the levels of the image
levels-adjust <img-var-name> <new-img-var-name> <black-int> <middle-int> <white-int> split <percentage-int> --- adjusts the levels of the image and shows the original and adjusted image side by side
E.g.: levels-adjust open-source open-source-levels-adjust 100 200 300 split 50

Color correction of an image:
Use this operation to correct the color of the image also supports split view.
color-correct <img-var-name> <new-img-var-name>--- corrects the color of the image
color-correct <img-var-name> <new-img-var-name> split <percentage-int> --- corrects the color of the image and shows the original and corrected image side by side
E.g.: color-correct open-source open-source-color-correct split 50
